{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-08-06T22:49:00.926847Z\",\"iopub.execute_input\":\"2021-08-06T22:49:00.927243Z\",\"iopub.status.idle\":\"2021-08-06T22:49:00.933425Z\",\"shell.execute_reply.started\":\"2021-08-06T22:49:00.927207Z\",\"shell.execute_reply\":\"2021-08-06T22:49:00.932543Z\"}}\nfrom IPython.display import HTML\nfrom base64 import b64encode\n\ndef play(filename):\n    html = ''\n    video = open(filename,'rb').read()\n    src = 'data:video/mp4;base64,' + b64encode(video).decode()\n    html += '<video width=1000 controls autoplay loop><source src=\"%s\" type=\"video/mp4\"></video>' % src \n    return HTML(html)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-08-06T22:49:00.934838Z\",\"iopub.execute_input\":\"2021-08-06T22:49:00.935162Z\",\"iopub.status.idle\":\"2021-08-06T22:49:11.018670Z\",\"shell.execute_reply.started\":\"2021-08-06T22:49:00.935132Z\",\"shell.execute_reply\":\"2021-08-06T22:49:11.017446Z\"}}\nimport numpy as np\nimport matplotlib.pyplot as plt\nu = 1.0 # wave speed\ndx = 1.0\nc = 0.75 # defines the stability of the system\ndt = c*dx/u\nlen_x = 100.0\nlen_y = 100.0\nend_time = 250\n\nx = np.arange(0.0, len_x+dx, dx)   # number of grids, different points of x\nt = np.arange(0.0, len_y+dx, dx)   # necessary to creat two dimentional space\nX, T = np.meshgrid(x,t)\nf = np.zeros_like(X)  # initially the f is zero\nf[41:60]=1.0\nplt.figure(figsize=(10,7)) \nicounter = -1\nfor it in np.arange(0.0,end_time+dt, dt):    \n    icounter = icounter + 1\n    if np.mod(icounter,10)==0:\n        plt.plot(T,f,'k-',label='Upwind Scheme')\n        plt.xlabel('x: Horizontal axis')\n        plt.ylabel('T: Amplitude')\n        plt.title('Time=%.6f'%(it),fontsize = 15)\n        plt.ylim(0.,1.2)\n        plt.savefig('%06.6d.jpg'%(icounter))\n        plt.cla()\n        plt.clf()\n        plt.close\n        plt.grid()\n    f = f + c*(np.roll(f,1,axis=0)-f)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-08-06T22:49:11.020765Z\",\"iopub.execute_input\":\"2021-08-06T22:49:11.021216Z\",\"iopub.status.idle\":\"2021-08-06T22:49:13.516954Z\",\"shell.execute_reply.started\":\"2021-08-06T22:49:11.021172Z\",\"shell.execute_reply\":\"2021-08-06T22:49:13.515607Z\"}}\n!rm *.mp4\n!ffmpeg -r 8.0 -pattern_type glob -i '/kaggle/working/*.jpg' -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" -vcodec libx264 -pix_fmt yuv420p Upwind.mp4\n!rm *.jpg\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-08-06T22:49:13.519111Z\",\"iopub.execute_input\":\"2021-08-06T22:49:13.519583Z\",\"iopub.status.idle\":\"2021-08-06T22:49:13.531875Z\",\"shell.execute_reply.started\":\"2021-08-06T22:49:13.519531Z\",\"shell.execute_reply\":\"2021-08-06T22:49:13.530786Z\"}}\nplay('/kaggle/working/Upwind.mp4')","metadata":{"_uuid":"962b5921-6edf-4d37-95a9-e7f393f3a1f1","_cell_guid":"31eb5ce3-1c84-4262-8f97-d1c0fa32c9c1","collapsed":false,"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]}]}